// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3824.BetaBot.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc3824.BetaBot.Robot;

/**
 *
 */
public class VisionShooterHeight extends Command
{

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	public VisionShooterHeight()
	{

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	}

	// Called just before this Command runs the first time
	protected void initialize()
	{
		double distance;
		double shooterHeight;
		
		// Get the distance from the target
		distance = Robot.targets.getDistanceFromLargestTarget();
		
		if (distance > 0.0)
		{
//			// y = 0.0005x2 - 0.353x + 85.581
//			shooterHeight = (0.0005 * distance * distance) - (0.353 * distance) + 85.581;		
		
//			// y = 0.0018x2 - 0.6531x + 101.44
//			shooterHeight = (0.0018 * distance * distance) - (0.6531 * distance) + 101.44;		

			// y = 0.0017x2 - 0.6417x + 106.2
			shooterHeight = (0.0017 * distance * distance) - (0.6417 * distance) + 106.2;		
					
			// Set the shooter PID set point
			Robot.shooter.setShooterElevationSetpoint(shooterHeight);
		}
	}

	// Called repeatedly when this Command is scheduled to run
	protected void execute()
	{
	}

	// Make this return true when this Command no longer needs to run execute()
	protected boolean isFinished()
	{
		return true;
	}

	// Called once after isFinished returns true
	protected void end()
	{
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	protected void interrupted()
	{
	}
}
