// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3824.BetaBot.commands;

import edu.wpi.first.wpilibj.Preferences;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc3824.BetaBot.Constants;
import org.usfirst.frc3824.BetaBot.Robot;

/**
 *
 */
public class ShooterElevationControl extends Command
{
	private double m_ActualShooterSetPoint;

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	private double m_ShooterSetPoint;

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	public ShooterElevationControl(double ShooterSetPoint)
	{
		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
		m_ShooterSetPoint = ShooterSetPoint;

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.shooterAngle);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	}

	// Called just before this Command runs the first time
	protected void initialize()
	{
		// Get the present shooter elevator set point
		m_ActualShooterSetPoint = Robot.shooterAngle.GetShooterAngleSetPoint();
		
		// Determine if the command was called from a button
		if (m_ShooterSetPoint == -30.0)       // Jog up button
			m_ActualShooterSetPoint += 5.0;
		else if (m_ShooterSetPoint == -50.0)  // Jog down button
			m_ActualShooterSetPoint -= 5.0;
		else if (m_ShooterSetPoint == -70.0)  // Set position buttons
			m_ActualShooterSetPoint = Preferences.getInstance().getDouble("Button 07", Constants.SHOOTER_ELEVATION_BUTTON7);
		else if (m_ShooterSetPoint == -80.0)
			m_ActualShooterSetPoint = Preferences.getInstance().getDouble("Button 08", Constants.SHOOTER_ELEVATION_BUTTON8);
		else if (m_ShooterSetPoint == -90.0)
			m_ActualShooterSetPoint = Preferences.getInstance().getDouble("Button 09", Constants.SHOOTER_ELEVATION_BUTTON9);
		else if (m_ShooterSetPoint == -100.0)
			m_ActualShooterSetPoint = Preferences.getInstance().getDouble("Button 10", Constants.SHOOTER_ELEVATION_BUTTON10);
		else if (m_ShooterSetPoint == -110.0)
			m_ActualShooterSetPoint = Preferences.getInstance().getDouble("Button 11", Constants.SHOOTER_ELEVATION_BUTTON11);
		else if (m_ShooterSetPoint == -120.0)
			m_ActualShooterSetPoint = Preferences.getInstance().getDouble("Button 12", Constants.SHOOTER_ELEVATION_BUTTON12);
		else
			m_ActualShooterSetPoint = m_ShooterSetPoint;
	
		// Set the shooter PID set point
		Robot.shooterAngle.setShooterElevationSetpoint(m_ActualShooterSetPoint);

		// Enable the shooter elevation PID
		Robot.shooterAngle.setShooterElevationEnabled(true);
	}

	// Called repeatedly when this Command is scheduled to run
	protected void execute()
	{

	}

	// Make this return true when this Command no longer needs to run execute()
	protected boolean isFinished()
	{
		return true;
	}

	// Called once after isFinished returns true
	protected void end()
	{

	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	protected void interrupted()
	{

	}
}
