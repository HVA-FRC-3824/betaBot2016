// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3824.BetaBot.commands;

import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc3824.BetaBot.Constants;
import org.usfirst.frc3824.BetaBot.Robot;

/**
 *
 */
public class TeleopAutoDriveOverDefense extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public TeleopAutoDriveOverDefense() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.chassis);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() 
    {
    	Robot.chassis.stop();
    	
		// Set the PID up for driving straight
		Robot.chassis.configureGyroPIDs(Constants.DRIVETRAIN_DRIVE_STRAIGHT_P, 
		                                Constants.DRIVETRAIN_DRIVE_STRAIGHT_I, 
		                                Constants.DRIVETRAIN_DRIVE_STRAIGHT_D, 
		                                Constants.DRIVETRAIN_DRIVE_MINIMUM_OUTPUT,
		                                Constants.DRIVETRAIN_DRIVE_MAXIMUM_OUTPUT,
		                                Robot.chassis.getCurrentHeading(), 0.0, 0.0);
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() 
    {
		// Update gyro setpoint for auto drive
		Robot.chassis.updateGyroSetpointFromUltrasonic();
		
		// Set forward 
		Robot.chassis.updateMagnitudeWithJoystick(Robot.oi.driveJoystick);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end()
    {
		// disable the PID and stop the robot
		Robot.chassis.disableAllPIDs();
		Robot.chassis.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() 
    {
		// call the end method
		this.end();
    }
}
