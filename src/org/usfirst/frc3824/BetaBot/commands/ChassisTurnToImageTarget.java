// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3824.BetaBot.commands;

import edu.wpi.first.wpilibj.PIDController;
import edu.wpi.first.wpilibj.PIDSource;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.Preferences;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.networktables.NetworkTable;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc3824.BetaBot.Constants;
import org.usfirst.frc3824.BetaBot.Robot;
import org.usfirst.frc3824.BetaBot.subsystems.Chassis.AnglePIDOutput;

/**
 *
 */
public class ChassisTurnToImageTarget extends Command
{

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	public ChassisTurnToImageTarget()
	{
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	}

	// Called just before this Command runs the first time
	protected void initialize()
	{
		// Set the PID up for driving straight
		Robot.chassis.getAngleGyroController().setPID(Constants.DRIVETRAIN_DRIVE_STRAIGHT_P, 
		                                              Constants.DRIVETRAIN_DRIVE_STRAIGHT_I, 
		                                              Constants.DRIVETRAIN_DRIVE_STRAIGHT_D);

		Robot.chassis.getAngleGyroController().reset();
		Robot.chassis.getAngleGyroController().setSetpoint(Robot.chassis.getGyroValue() + Robot.targets.getTargetOffsetFromCenterAngle());

		// update the PID direction and power
		Robot.chassis.setDirection(0);
		Robot.chassis.setMagnitude(0);

		// enable the PID
		Robot.chassis.getAngleGyroController().enable();

	}

	// Called repeatedly when this Command is scheduled to run
	protected void execute()
	{
		//Robot.chassis.getAngleGyroController().setSetpoint(Robot.chassis.getGyroValue() + Robot.targets.getTargetOffsetFromCenterAngle());
		SmartDashboard.putNumber("ImageTurn Current Angle", Robot.chassis.getGyroValue());
	}

	// Make this return true when this Command no longer needs to run execute()
	protected boolean isFinished()
	{
		return Robot.chassis.getAngleGyroController().onTarget();
	}

	// Called once after isFinished returns true
	protected void end()
	{
		// disable the PID and stop the robot
		Robot.chassis.getAngleGyroController().reset();
		Robot.chassis.getAngleGyroController().disable();
		Robot.chassis.stop();
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	protected void interrupted()
	{
		// call the end method
		this.end();
	}
}
