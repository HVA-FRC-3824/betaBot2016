// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3824.BetaBot.subsystems;

import org.usfirst.frc3824.BetaBot.Robot;
import org.usfirst.frc3824.BetaBot.RobotMap;
import org.usfirst.frc3824.BetaBot.commands.*;
import org.usfirst.frc3824.BetaBot.utilities.USBCamera;

import com.ni.vision.NIVision;

import edu.wpi.first.wpilibj.CameraServer;
import edu.wpi.first.wpilibj.Preferences;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 *
 */
public class TargetCam extends Subsystem
{
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	private final USBCamera m_targetCam = RobotMap.shooterTargetCam;
	private NIVision.Image m_singleFrame;
	private boolean m_running;
	
	// Put methods for controlling this subsystem
	// here. Call these from Commands.

	public TargetCam()
	{
		m_singleFrame = NIVision.imaqCreateImage(NIVision.ImageType.IMAGE_RGB, 0);
		//CameraServer.getInstance().startAutomaticCapture(targetCam);
	}
	
	
	public class Targets
	{
		
	}
	
	public void initDefaultCommand()
	{
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		// Set the default command for a subsystem here.
		// setDefaultCommand(new MySpecialCommand());
	}
	
//	Targets GetCurrentTargets()
//	{
//		return void;
//	}
	
	public void cameraEnable()
	{
		if(!m_running)
		{
			m_targetCam.openCamera();
			m_targetCam.startCapture();
			m_running = true;
		}
	}
	
	public void cameraDisable()
	{
		if(m_running)
		{
			m_targetCam.stopCapture();
			m_targetCam.closeCamera();
			m_running = false;
		}
	}
	public void updateDashboardImage()
	{
		// targetCam.updateSettings();
		// targetCam.startCapture();
		//for(int i=0; i<1000; i++);
		if(m_running)
		{
			m_targetCam.getImage(m_singleFrame);
			CameraServer.getInstance().setImage(m_singleFrame);
		}
		// targetCam.stopCapture();
	}
	
	public void updateValuesOnDashboard()
	{
		SmartDashboard.putString("Current Exposure Value", m_targetCam.getExposure());
		SmartDashboard.putString("Current Exposure Mode", m_targetCam.getExposureMode());		
		SmartDashboard.putNumber("Current Brightness", m_targetCam.getBrightness());
		SmartDashboard.putNumber("Minimum Exposure", m_targetCam.getExposureMin());
		SmartDashboard.putNumber("Maximum Exposure", m_targetCam.getExposureMax());
	}
	
	public void setExposure(int exposure)
	{
		m_targetCam.setExposureManual(exposure);
	}
	
	public void setBrightness(int brightness)
	{
		m_targetCam.setBrightness(brightness);
	}
	
	public void setExposureAuto()
	{
		m_targetCam.setExposureAuto();
	}
	
	public void setExposureHoldCurrent()
	{
		m_targetCam.setExposureHoldCurrent();
	}
}
