// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3824.BetaBot.subsystems;

import java.io.IOException;

import org.usfirst.frc3824.BetaBot.Constants;
import org.usfirst.frc3824.BetaBot.Robot;
import org.usfirst.frc3824.BetaBot.RobotMap;
import org.usfirst.frc3824.BetaBot.commands.*;

import com.ni.vision.NIVision;
import java.lang.reflect.Field;

import edu.wpi.first.wpilibj.CameraServer;
import edu.wpi.first.wpilibj.Preferences;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 *
 */
public class TargetCam extends Subsystem
{
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	private NIVision.Image m_singleFrame;
	
	// Put methods for controlling this subsystem
	// here. Call these from Commands.

	public TargetCam()
	{
	}
	
	public void initDefaultCommand()
	{
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		// Set the default command for a subsystem here.
		// setDefaultCommand(new MySpecialCommand());
	}
	
	/*
	 * Push a new, single image to the dashboard
	 */
	public void updateDashboardImage()
	{
	}
	
	/*
	 * Push the current Exposure and Brightness values to the dashboard
	 */
	public void updateValuesOnDashboard()
	{
	}
	
	/*
	 * Pull the Exposure value from the prefs and set the camera exposure
	 */
	public void setExposureValueFromPrefs()
	{
		setExposure(Preferences.getInstance().getInt("camExposure", 50));
	}
	
	/*
	 * Pull the Brightness value from the prefs and set the camera brightness
	 */
	public void setBrightnessValueFromPrefs()
	{
		setBrightness(Preferences.getInstance().getInt("camBrightness", 50));
	}
	
	/*
	 * Set the camera's exposure value, will force camera to manual exposure
	 */
	public void setExposure(int exposure)
	{
	}
	
	/*
	 * Set the camera's brightness value
	 */
	public void setBrightness(int brightness)
	{
	}
	
	/*
	 * Switch the camera to auto exposure mode
	 */
	public void setExposureAuto()
	{
	}
	
	/*
	 * Switch to manual exposure, holding the exposure to the current value
	 */
	public void setExposureHoldCurrent()
	{
	}
	
	/*
	 * Load all of the camera settings from the preferences and set the
	 * camera.  This is used at the start of the robot code to make sure
	 * the camera is in the correct state before image processing begins
	 * being used
	 */
	public void setCameraConfigFromPrefsWithoutCapture()
	{
	}
	
	/*
	 * Configure the camera parameters, then start the image processing
	 */
	public void configAndStartImageProcessing()
	{
	}
	
	/*
	 * Launch the image processing on the RPi
	 */
	public void launchImageProcessing()
	{
	}
		
	/*
	 * Kill the image processing on the RPi
	 */
	public void killImageProcessing()
	{
	}
	
}
