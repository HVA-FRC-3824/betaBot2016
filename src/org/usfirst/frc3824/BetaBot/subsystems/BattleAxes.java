// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3824.BetaBot.subsystems;

import org.usfirst.frc3824.BetaBot.RobotMap;
import org.usfirst.frc3824.BetaBot.commands.*;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.command.Subsystem;

/**
 *
 */
public class BattleAxes extends Subsystem
{

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final Solenoid axeRight = RobotMap.battleAxesAxeRight;
    private final Solenoid axeLeft = RobotMap.battleAxesAxeLeft;
    private final SpeedController rightMotor = RobotMap.battleAxesRightMotor;
    private final SpeedController leftMotor = RobotMap.battleAxesLeftMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    private boolean m_squids_drive_out = false;
    
	// Put methods for controlling this subsystem
	// here. Call these from Commands.

	public void initDefaultCommand()
	{
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		// Set the default command for a subsystem here.
		// setDefaultCommand(new MySpecialCommand());
	}
	
	public void setAxePositions(boolean right, boolean left)
	{
		axeRight.set(right);
		axeLeft.set(left);
	}
	
	public void setWheelIntakePower(double right, double left)
	{
		rightMotor.set(right);
		leftMotor.set(left);
	}
	
	public boolean getSquidsOutFlag()
	{
		return m_squids_drive_out;
	}
	
	public void setSquidsOutFlag(boolean flag)
	{
		m_squids_drive_out = flag;
	}
}
